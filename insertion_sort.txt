import time

def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > key:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr

# Arrays given in assignment
arr1 = [1, 2, 3, 4, 5]
arr2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
arr3 = [i for i in range(1, 51)]   # 1 to 50
arr4 = [i for i in range(1, 101)]  # 1 to 100

# Function to measure time and sort
def sort_and_measure(array, array_name):
    times = []
    for _ in range(5):  # run 5 times
        arr_copy = array.copy()
        start_time = time.perf_counter()
        insertion_sort(arr_copy)
        end_time = time.perf_counter()
        times.append(end_time - start_time)
    
    average_time = sum(times) / len(times)
    print(f"Average time for {array_name}: {average_time:.10f} seconds")
    return average_time

# Measure and print times
avg1 = sort_and_measure(arr1, "Arr1 (5 elements)")
avg2 = sort_and_measure(arr2, "Arr2 (10 elements)")
avg3 = sort_and_measure(arr3, "Arr3 (50 elements)")
avg4 = sort_and_measure(arr4, "Arr4 (100 elements)")